{
    "type": [
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3
    ],
    "data": [
        "\nR version 4.3.0 (2023-04-21) -- \"Already Tomorrow\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: x86_64-pc-linux-gnu (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n* Project '~/' loaded. [renv 0.17.3]\n",
        "Traceback (most recent calls last):\n",
        "51: .rs.invokeHook(\"rstudio.sessionInit\", TRUE)\n",
        "50: tryCatch(fun(...), error = function(e) {\n",
        "    })\n",
        "49: tryCatchList(expr, classes, parentenv, handlers)\n",
        "48: tryCatchOne(expr, names, parentenv, handlers[[1L]])\n",
        "47: doTryCatch(return(expr), name, parentenv, handler)\n",
        "46: fun(...)\n",
        "45: renv_project_synchronized_check(project, lockfile)\n",
        "44: quietly({\n",
        "        renv_scope_options(renv.verbose = FALSE)\n",
        "        status(project = project, sources = FALSE)\n",
        "    })\n",
        "43: withCallingHandlers(expr, warning = function(c) invokeRestart(\"muffleWarning\"), \n",
        "        message = function(c) invokeRestart(\"muffleMessage\"), packageStartupMessage = function(c) invokeRestart(\"muffleMessage\"))\n",
        "42: status(project = project, sources = FALSE)\n",
        "41: renv_status_impl(project, libpaths, lockpath, sources, cache)\n",
        "40: renv_snapshot_dependencies(project = project, type = settings$snapshot.type(project = project))\n",
        "39: withCallingHandlers(dependencies(path = path, root = project, \n",
        "        progress = FALSE, errors = errors), renv.dependencies.error = renv_dependencies_error_handler(message, \n",
        "        errors))\n",
        "38: dependencies(path = path, root = project, progress = FALSE, errors = errors)\n",
        "37: renv_dependencies_impl(path = path, root = root, progress = progress, \n",
        "        errors = errors, dev = dev, ...)\n",
        "36: renv_dependencies_find(path, root)\n",
        "35: lapply(path, renv_dependencies_find_impl, root = root, depth = 0)\n",
        "34: FUN(X[[i]], ...)\n",
        "33: renv_dependencies_find_dir(path, root, depth)\n",
        "32: map(children, renv_dependencies_find_impl, root = root, depth = depth)\n",
        "31: lapply(x, f, ...)\n",
        "30: FUN(X[[i]], ...)\n",
        "29: renv_dependencies_find_dir(path, root, depth)\n",
        "28: map(children, renv_dependencies_find_impl, root = root, depth = depth)\n",
        "27: lapply(x, f, ...)\n",
        "26: FUN(X[[i]], ...)\n",
        "25: renv_dependencies_find_dir(path, root, depth)\n",
        "24: map(children, renv_dependencies_find_impl, root = root, depth = depth)\n",
        "23: lapply(x, f, ...)\n",
        "22: FUN(X[[i]], ...)\n",
        "21: renv_dependencies_find_dir(path, root, depth)\n",
        "20: map(children, renv_dependencies_find_impl, root = root, depth = depth)\n",
        "19: lapply(x, f, ...)\n",
        "18: FUN(X[[i]], ...)\n",
        "17: renv_dependencies_find_dir(path, root, depth)\n",
        "16: map(children, renv_dependencies_find_impl, root = root, depth = depth)\n",
        "15: lapply(x, f, ...)\n",
        "14: FUN(X[[i]], ...)\n",
        "13: renv_dependencies_find_dir(path, root, depth)\n",
        "12: map(children, renv_dependencies_find_impl, root = root, depth = depth)\n",
        "11: lapply(x, f, ...)\n",
        "10: FUN(X[[i]], ...)\n",
        " 9: renv_dependencies_find_dir(path, root, depth)\n",
        " 8: map(children, renv_dependencies_find_impl, root = root, depth = depth)\n",
        " 7: lapply(x, f, ...)\n",
        " 6: FUN(X[[i]], ...)\n",
        " 5: renv_dependencies_find_dir(path, root, depth)\n",
        " 4: renv_dependencies_find_dir_children(path, root, depth)\n",
        " 3: renv_renvignore_exec(path, root, children)\n",
        " 2: renv_renvignore_pattern(path, root)\n",
        " 1: ignores$push(parsed)\n",
        "WARNING: Session forced to suspend due to system upgrade, restart, maintenance, or other issue. Your session data was saved however running computations may have been interrupted.\n"
    ]
}